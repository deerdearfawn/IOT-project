<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deer.dao.AccountTradeDao">
    <!--<cache />-->

    <sql id="RechargeAllInfo">
        Charge_trade,type,Charge_time,Charge_server,status,Payment_method,Cash_account,User_ID,Processing_time
    </sql>

    <insert id="insertAccountRechargeTrade" useGeneratedKeys="true" keyProperty="ID">
        insert
        into accounttrade(Charge_trade,type,Charge_time,Charge_server,status,Payment_method,Cash_account,User_ID)
        values(#{charge_trade},#{type},#{charge_time},#{charge_server},#{status},#{payment_method},#{cash_account},#{user_ID})
    </insert>

    <select id="queryAccountTradeAllInfoByUser_IDAndType" resultType="accountTrade">
        select ID,<include refid="RechargeAllInfo"></include>
        from accounttrade
        where type=#{type}
        <if test="User_ID != null">
            and User_ID=#{User_ID}
        </if>
    </select>

    <update id="updateStatusProcessingTimeByID">
        update accounttrade
        set status=#{status},Processing_time=#{processing_time}
        where ID=#{ID}
    </update>

    <select id="queryTradeByID" resultType="accountTrade">
        select <include refid="RechargeAllInfo"></include>
        from accounttrade
        where ID=#{ID}
    </select>

    <select id="queryAccountTradeInfoByCondition" resultType="accountTrade">
        select distinct
        ID,<include refid="RechargeAllInfo"></include>
        from accounttrade
        <where>
            type = #{type}
            <if test="user_ID != -1">
                and User_ID = #{user_ID}
            </if>
            <if test="status != -1">
                and status = #{status}
            </if>
            <if test="startID != '' and endID != ''">
                and ID between #{startID} and #{endID}
            </if>
            <if test="startID != '' and endID == ''">
                and ID >= #{startID}
            </if>
            <if test="startID == '' and endID != ''">
                and ID &lt;= #{endID}
            </if>
            <if test="startCharge_time != '' and endCharge_time == ''">
                and charge_time >= #{startCharge_time}
            </if>
            <if test="startCharge_time == '' and endCharge_time != ''">
                and charge_time &lt;= #{endCharge_time}
            </if>
            <if test="startCharge_time != '' and endCharge_time != ''">
                and charge_time between #{startCharge_time} and #{endCharge_time}
            </if>
            <if test="payment_method != -1">
                and Payment_method = #{payment_method}
            </if>
            <if test="startCharge_trade != null and endCharge_trade != null">
                and Charge_trade between #{startCharge_trade} and #{endCharge_trade}
            </if>
            <if test="startCharge_trade == null and endCharge_trade != null">
                and Charge_trade &lt;= #{endCharge_trade}
            </if>
            <if test="startCharge_trade != null and endCharge_trade == null">
                and Charge_trade >= #{startCharge_trade}
            </if>
            order by ID
        </where>
    </select>

    <select id="queryTradeStatusByID" resultType="int">
        select status
        from accounttrade
        where ID=#{ID}
    </select>
</mapper>